package org.assertj.examples.data;

/**
 * {@link Employee.Title} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractEmployeeTitleAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class EmployeeTitleAssert extends AbstractEmployeeTitleAssert<EmployeeTitleAssert, Employee.Title> {

  /**
   * Creates a new <code>{@link EmployeeTitleAssert}</code> to make assertions on actual Employee.Title.
   * @param actual the Employee.Title we want to make assertions on.
   */
  public EmployeeTitleAssert(Employee.Title actual) {
    super(actual, EmployeeTitleAssert.class);
  }

  /**
   * An entry point for EmployeeTitleAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myEmployee.Title)</code> and get specific assertion with code completion.
   * @param actual the Employee.Title we want to make assertions on.
   * @return a new <code>{@link EmployeeTitleAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static EmployeeTitleAssert assertThat(Employee.Title actual) {
    return new EmployeeTitleAssert(actual);
  }
}
