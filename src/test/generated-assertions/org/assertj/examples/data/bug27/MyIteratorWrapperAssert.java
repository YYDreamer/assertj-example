package org.assertj.examples.data.bug27;

/**
 * {@link MyIteratorWrapper} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractMyIteratorWrapperAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class MyIteratorWrapperAssert extends AbstractMyIteratorWrapperAssert<MyIteratorWrapperAssert, MyIteratorWrapper> {

  /**
   * Creates a new <code>{@link MyIteratorWrapperAssert}</code> to make assertions on actual MyIteratorWrapper.
   * @param actual the MyIteratorWrapper we want to make assertions on.
   */
  public MyIteratorWrapperAssert(MyIteratorWrapper actual) {
    super(actual, MyIteratorWrapperAssert.class);
  }

  /**
   * An entry point for MyIteratorWrapperAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myMyIteratorWrapper)</code> and get specific assertion with code completion.
   * @param actual the MyIteratorWrapper we want to make assertions on.
   * @return a new <code>{@link MyIteratorWrapperAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static MyIteratorWrapperAssert assertThat(MyIteratorWrapper actual) {
    return new MyIteratorWrapperAssert(actual);
  }
}
