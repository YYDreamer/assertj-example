package org.assertj.examples.data.bug27;

/**
 * {@link MyModelClass.MyBean} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractMyModelClassMyBeanAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class MyModelClassMyBeanAssert extends AbstractMyModelClassMyBeanAssert<MyModelClassMyBeanAssert, MyModelClass.MyBean> {

  /**
   * Creates a new <code>{@link MyModelClassMyBeanAssert}</code> to make assertions on actual MyModelClass.MyBean.
   * @param actual the MyModelClass.MyBean we want to make assertions on.
   */
  public MyModelClassMyBeanAssert(MyModelClass.MyBean actual) {
    super(actual, MyModelClassMyBeanAssert.class);
  }

  /**
   * An entry point for MyModelClassMyBeanAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myMyModelClass.MyBean)</code> and get specific assertion with code completion.
   * @param actual the MyModelClass.MyBean we want to make assertions on.
   * @return a new <code>{@link MyModelClassMyBeanAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static MyModelClassMyBeanAssert assertThat(MyModelClass.MyBean actual) {
    return new MyModelClassMyBeanAssert(actual);
  }
}
